#!/bin/bash
# Copyright 2020 Matt Fleming
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

SYSFS_DIR=/sys/devices/cpu

echo "Linux kernel version: $(uname -r)"
if [ -e "${SYSFS_DIR}/caps/pmu_name" ]; then
	pmu_name=$(cat ${SYSFS_DIR}/caps/pmu_name)
	echo "Microarchitecture: $pmu_name"
else
	echo "Microarchitecture: generic"
	sudo dmesg | grep Performance
fi


[ -e "${SYSFS_DIR}/caps/branches" ] && {
	num_entries=$(cat ${SYSFS_DIR}/caps/branches)
	echo "Last Branch Record (LBR) events available: $num_entries entries"
}

[ -e "${SYSFS_DIR}/caps/max_precise" ] && {
	precision=$(cat ${SYSFS_DIR}/caps/max_precise)
	case $precision in
		0)
			str="sample IP can have arbitrary skid"
			;;
		1)
			str="sample IP must have constant skid"
			;;
		2)
			str="sample IP requested to have 0 skid"
			;;
		3)
			str="sample IP must have 0 skid"
			;;
		*)
			str="Unknown max_precise value"
			;;
	esac

	echo "Maximum PEBS precision available: $precision ($str)"
}

[ -e "${SYSFS_DIR}/events" ] && {
	echo "PEBS events available:"
	for e in ${SYSFS_DIR}/events/*; do
		event=$(basename $e)
		mask=$(cat $e)

		printf "\t$event => $mask\n"
	done
}
